<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="api-call-coreservices-test-suite.xml" />
	<munit:test name="api-call-coreservices-login-flow-test" doc:id="4129ef87-ee7a-4c0f-9fa5-c499da27b000" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when Post Login Request" doc:id="2a118f5d-04b2-4cb8-9ef7-2424fa2debf5" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Post Login Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('sources.anypoint.platform.apis.examples/api-call-coreservices/post-login-response.json')]" mediaType="application/json" />
					<munit-tools:attributes value='#[{
 "statusCode": 200
 }]' />
				</munit-tools:then-return>

			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<set-variable value="#[MunitTools::getResourceAsString('sources.anypoint.platform.apis.examples/api-call-coreservices/post-login-response.json')]" doc:name="set expected result" doc:id="1ac6f926-b3c8-4870-b209-90f38c730f27" variableName="expected" mimeType="application/json" />
			<flow-ref doc:name="Flow-ref to api-call-coreservices-login-flow" doc:id="e6ebafc7-95ec-4490-b3be-2fb4ff6a2dfe" name="api-call-coreservices-login-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="3add8e16-55ee-4a09-b642-53f3631ae371" expression="#[payload]" is="#[MunitTools::equalTo(vars.expected)]" message="The response payload is not the expected"/>
		</munit:validation>
	</munit:test>
	<munit:test name="api-call-coreservices-organizations-flow-test" doc:id="16db34b7-50dd-4344-a39e-445002d3fbba" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when Get Hierarchy Request" doc:id="724c4381-a0f2-4732-91e3-f105eff0699e" processor="http:request" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get Hierarchy Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('sources.anypoint.platform.apis.examples/api-call-coreservices/get-hierarchy-response.json')]" mediaType="application/json" />
					<munit-tools:attributes value='#[{
 "statusCode": 200
 }]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<set-variable value="#[MunitTools::getResourceAsString('sources.anypoint.platform.apis.examples/api-call-coreservices/get-hierarchy-response.json')]" doc:name="set expected result" doc:id="7bb93b9b-4058-4ea3-96b4-5f1d1d9e6d2f" variableName="expected" mimeType="application/json" />
			<flow-ref doc:name="api-call-coreservices-organizations-flow" doc:id="dea15d4c-be3a-4517-be04-4c9e555b358b" name="api-call-coreservices-organizations-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="9ba6d47b-a5fb-462b-8e18-19ad8815a6c4" expression="#[payload]" is="#[MunitTools::equalTo(vars.expected)]" message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>

</mule>
